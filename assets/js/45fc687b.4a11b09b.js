"use strict";(self.webpackChunkz_4_c=self.webpackChunkz_4_c||[]).push([[8162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,g=m["".concat(l,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(g,s(s({ref:t},p),{},{components:n})):r.createElement(g,s({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:i,s[1]=o;for(var u=2;u<a;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2804:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const a={},s=void 0,o={unversionedId:"onboarding/Presentation",id:"onboarding/Presentation",title:"Presentation",description:"- Docs \xbb",source:"@site/docs/onboarding/Presentation.md",sourceDirName:"onboarding",slug:"/onboarding/Presentation",permalink:"/ docs-public/docs/onboarding/Presentation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/onboarding/Presentation.md",tags:[],version:"current",frontMatter:{},sidebar:"OnboardingSidebar",previous:{title:"Introduction",permalink:"/ docs-public/docs/onboarding/introduction"},next:{title:"Features",permalink:"/ docs-public/docs/onboarding/Features"}},l={},u=[{value:"Conventions\xb6",id:"conventionslien-permanent-vers-ce-titre",level:2},{value:"Pr\xe9-requis\xb6",id:"pr\xe9-requislien-permanent-vers-ce-titre",level:2},{value:"Travailler avec Github\xb6",id:"travailler-avec-githublien-permanent-vers-ce-titre",level:2},{value:"Initialisation\xb6",id:"initialisationlien-permanent-vers-ce-titre",level:2},{value:"Processus non termin\xe9\xb6",id:"processus-non-termin\xe9lien-permanent-vers-ce-titre",level:2},{value:"merge vs rebase\xb6",id:"merge-vs-rebaselien-permanent-vers-ce-titre",level:2}],p={toc:u};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"index.html"},"Docs")," \xbb"),(0,i.kt)("li",{parentName:"ul"},"Pr\xe9sentation"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/TECLIB/gitflow-doc/blob/master/source/presentation.rst"},"Edit on GitHub"))),(0,i.kt)("hr",null),(0,i.kt)("h1",{id:"pr\xe9sentationlien-permanent-vers-ce-titre"},"Pr\xe9sentation",(0,i.kt)("a",{parentName:"h1",href:"#presentation",title:"Lien permanent vers ce titre"},"\xb6")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://nvie.com/posts/a-successful-git-branching-model/"},"git-flow")," est un mod\xe8le de branche, qui est fourni avec de la documentation, et un plugin git pour ajouter des commandes qui facilitent le travail."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://git-flow.readthedocs.io/fr/latest/_images/gitflow.png"},(0,i.kt)("img",{parentName:"a",src:"https://git-flow.readthedocs.io/fr/latest/_images/gitflow.png",alt:"_images/gitflow.png"}))),(0,i.kt)("p",null,"Gardez en t\xeate qu\u2019il s\u2019agit de standardiser ; des commandes git standard sont utilis\xe9es an arri\xe8re-plan, vous pourriez obtenir le m\xeame r\xe9sultat \xab manuellement \xbb qu\u2019avec git-flow. C\u2019est juste plus simple \xe0 utiliser, et \xe7a \xe9vite d\u2019utiliser la mauvaise branche, ou d\u2019oublier de merger quelque part."),(0,i.kt)("p",null,"Le but de la pr\xe9sente documentation n\u2019est pas de lister les pour et les contre de ce mod\xe8le, on notera simplement qu\u2019il n\u2019est pas pr\xe9vu pour fournir des branches de support \xe0 long terme, c\u2019est quelque chose qui avait \xe9t\xe9 \xe9voqu\xe9 mais qui n\u2019a finalement jamais \xe9t\xe9 impl\xe9ment\xe9."),(0,i.kt)("p",null,"D\u2019apr\xe8s les ",(0,i.kt)("a",{parentName:"p",href:"http://semver.org"},"r\xe8gles de versionnage s\xe9mantiques")," :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"vous ajouterez des ",(0,i.kt)("inlineCode",{parentName:"li"},"features")," pour les versions ",(0,i.kt)("em",{parentName:"li"},"majeures")," et ",(0,i.kt)("em",{parentName:"li"},"mineures")," uniquement,"),(0,i.kt)("li",{parentName:"ul"},"vous cr\xe9erez des ",(0,i.kt)("inlineCode",{parentName:"li"},"release")," pour des versions ",(0,i.kt)("em",{parentName:"li"},"majeures")," ou ",(0,i.kt)("em",{parentName:"li"},"mineures"),","),(0,i.kt)("li",{parentName:"ul"},"vous cr\xe9erez des ",(0,i.kt)("inlineCode",{parentName:"li"},"hotfix")," pour les versions ",(0,i.kt)("em",{parentName:"li"},"patch"),".")),(0,i.kt)("h2",{id:"conventionslien-permanent-vers-ce-titre"},"Conventions",(0,i.kt)("a",{parentName:"h2",href:"#conventions",title:"Lien permanent vers ce titre"},"\xb6")),(0,i.kt)("p",null,"La pr\xe9sente documentation part du principe que :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"tout est fait depuis la ligne de commande (je n\u2019utilise pas d\u2019interface graphique pour git de toutes fa\xe7ons).")),(0,i.kt)("h2",{id:"pr\xe9-requislien-permanent-vers-ce-titre"},"Pr\xe9-requis",(0,i.kt)("a",{parentName:"h2",href:"#pre-requisites",title:"Lien permanent vers ce titre"},"\xb6")),(0,i.kt)("p",null,"Pour que les commandes soient disponibles, vous devrez installer ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nvie/gitflow"},"le plugin git git-flow"),"."),(0,i.kt)("p",null,"La majorit\xe9 des distributions linux le fournissent dans leur d\xe9p\xf4ts (donc ",(0,i.kt)("inlineCode",{parentName:"p"},"yum install git-flow")," ou ",(0,i.kt)("inlineCode",{parentName:"p"},"apt-get install git-flow")," devrait faire l\u2019affaire) ou vous pouvez suivre ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nvie/gitflow/wiki/Installation"},"les instructions d\u2019installation")," depuis le wiki du projet."),(0,i.kt)("p",null,"Beaucoup de logiciels GIT supportent git-flow, ou le peuvent par le biais de plugins ; consultez les documentations respectives."),(0,i.kt)("p",null,"Si vous utilisez la ligne de commande, il existe de nombreux moyens pour afficher des informations utiles dans le prompt. Bien que ce ne soit pas un pr\xe9-requis, cela peut vous faire gagner du temps !"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://git-flow.readthedocs.io/fr/latest/_images/zsh-git-prompt.png"},(0,i.kt)("img",{parentName:"a",src:"https://git-flow.readthedocs.io/fr/latest/_images/zsh-git-prompt.png",alt:"https://git-flow.readthedocs.io/fr/latest/_images/zsh-git-prompt.png"}))),(0,i.kt)("p",null,"Par exemple, le prompt git ZSH que j\u2019utilise"),(0,i.kt)("h2",{id:"travailler-avec-githublien-permanent-vers-ce-titre"},"Travailler avec Github",(0,i.kt)("a",{parentName:"h2",href:"#working-with-github",title:"Lien permanent vers ce titre"},"\xb6")),(0,i.kt)("p",null,"Chaque projet aura un d\xe9p\xf4t principal h\xe9berg\xe9 sur Github. M\xeame si vous faites partie des d\xe9veloppeurs principaux, vous n\u2019utiliserez le d\xe9p\xf4t principal que pour pousser les modifications des branches ",(0,i.kt)("inlineCode",{parentName:"p"},"develop")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"master"),". Toutes les autres branches devront \xeatre cr\xe9\xe9es sur un fork (utilisez le bouton \xe9ponyme en haut de la page du projet - voir ci-dessous) que vous allez cr\xe9er sur votre compte."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://git-flow.readthedocs.io/fr/latest/_images/fork_button.png"},(0,i.kt)("img",{parentName:"a",src:"https://git-flow.readthedocs.io/fr/latest/_images/fork_button.png",alt:"https://git-flow.readthedocs.io/fr/latest/_images/fork_button.png"}))),(0,i.kt)("p",null,"Le bouton fork"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://git-flow.readthedocs.io/fr/latest/_images/forked.png"},(0,i.kt)("img",{parentName:"a",src:"https://git-flow.readthedocs.io/fr/latest/_images/forked.png",alt:"https://git-flow.readthedocs.io/fr/latest/_images/forked.png"}))),(0,i.kt)("p",null,"Le d\xe9p\xf4t fork\xe9 sur mon compte personnel"),(0,i.kt)("p",null,"Depuis votre copie de travail, ajoutez un nouveau remote, que vous nommerez par exemple comme votre compte github (le nom n\u2019a pas d\u2019importance, il suffit que vous vous en souveniez, et que vous restiez coh\xe9rent dans les autres projets). En prenant soin de remplacer ",(0,i.kt)("inlineCode",{parentName:"p"},"{github_username}")," avec votre propre nom d\u2019utilisateur, lancez :"),(0,i.kt)("p",null,"1-Open Terminal or Command Prompt"),(0,i.kt)("p",null,'2-Run the following command: ssh-keygen -t rsa -b 4096 -C "',(0,i.kt)("a",{parentName:"p",href:"mailto:your_email@example.com"},"your_email@example.com"),'"'),(0,i.kt)("p",null,"3-Enter a file in which to save the key, for example: /Users/you/.ssh/id_rsa"),(0,i.kt)("p",null,"4-Enter a passphrase (or leave it empty if you don't want to use a passphrase)"),(0,i.kt)("p",null,"5-Run the following command to copy your SSH key to your clipboard: pbcopy < ~/.ssh/id_rsa.pub"),(0,i.kt)("p",null,"6-Log in to your GitHub account and go to Settings > SSH and GPG keys."),(0,i.kt)("p",null,'7-Click on "New SSH key" button.'),(0,i.kt)("p",null,'8-Paste the SSH key in the "Key" field and give it a title, for example: "My development machine".'),(0,i.kt)("p",null,'9-Click on the "Add SSH key" button.'),(0,i.kt)("p",null,"$ git remote add {github_username} ",(0,i.kt)("a",{parentName:"p",href:"mailto:git@github.com"},"git@github.com"),":{github_username}/mreporting.git"),(0,i.kt)("p",null,"Toutes les branches que vous allez cr\xe9er et qui doivent \xeatre revues seront publi\xe9es sur votre fork."),(0,i.kt)("h2",{id:"initialisationlien-permanent-vers-ce-titre"},"Initialisation",(0,i.kt)("a",{parentName:"h2",href:"#initialization",title:"Lien permanent vers ce titre"},"\xb6")),(0,i.kt)("p",null,"Initialiser git-flow est assez simple, clonez le d\xe9p\xf4t, aller sur la branche ",(0,i.kt)("inlineCode",{parentName:"p"},"master")," et lancez :"),(0,i.kt)("p",null,"Note"),(0,i.kt)("p",null,"Quand vous clonez un d\xe9p\xf4t git, la branche par d\xe9faut sera utilis\xe9e. Dans la plupart des cas, ce sera ",(0,i.kt)("inlineCode",{parentName:"p"},"master"),", mais pensez \xe0 v\xe9rifier."),(0,i.kt)("p",null,"(master) $ git flow init"),(0,i.kt)("p",null,"$ git branch"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"develop\nmain")),(0,i.kt)("p",null,"Vous pouvez consid\xe9rer que les r\xe9ponses par d\xe9faut sont toutes correctes. Si la branche ",(0,i.kt)("inlineCode",{parentName:"p"},"develop")," existe d\xe9j\xe0, elle sera utilis\xe9e, le processus la cr\xe9era sinon."),(0,i.kt)("h2",{id:"processus-non-termin\xe9lien-permanent-vers-ce-titre"},"Processus non termin\xe9",(0,i.kt)("a",{parentName:"h2",href:"#not-finished-process",title:"Lien permanent vers ce titre"},"\xb6")),(0,i.kt)("p",null,"\xc0 certaines occasions, une commande git-flow peut ne pas se terminer (dans le cas d\u2019un conflit par exemple). Ce n\u2019est pas un probl\xe8me, puisque c\u2019est totalement g\xe9r\xe9 :)"),(0,i.kt)("p",null,"Si un processus git-flow est stopp\xe9, corrigez simplement l\u2019erreur et lancez la m\xeame commande une fois de plus. Il lancera tout simplement les t\xe2ches restantes."),(0,i.kt)("p",null,"Note"),(0,i.kt)("p",null,"Pour vous assurez que tout a fonctionn\xe9 correctement, regardez toujours attentivement la sortie !"),(0,i.kt)("h2",{id:"merge-vs-rebaselien-permanent-vers-ce-titre"},"merge vs rebase",(0,i.kt)("a",{parentName:"h2",href:"#merge-vs-rebase",title:"Lien permanent vers ce titre"},"\xb6")),(0,i.kt)("p",null,"Faut-il utiliser merge ou rebase ? H\xe9 bien, c\u2019est \xe0 vous de voir !"),(0,i.kt)("p",null,"Avertissement"),(0,i.kt)("p",null,"Bien que les deux solutions puissent \xeatre utilis\xe9es, et que vous avez la possibilit\xe9 de choisir \xe0 chaque fois, n\u2019oubliez pas qu\u2019un ",(0,i.kt)("inlineCode",{parentName:"p"},"rebase")," peut \xeatre destructeur ! Gardez cela \xe0 l\u2019esprit."),(0,i.kt)("p",null,"En fait, vous pouvez toujours corriger un rebase depuis votre copie de travail locale (en utilisant ",(0,i.kt)("inlineCode",{parentName:"p"},"reflog"),"). Notez cependant que c\u2019est quelque chose que vous ne devriez pas utiliser si vous n\u2019\xeates pas un expert git ;)"),(0,i.kt)("p",null,"Je ne souhaite nourrir aucun troll ; les deux poss\xe8dent leurs avantages et leurs inconv\xe9nients. Mon conseil est d\u2019\xe9viter les commit de merge quand ils ne sont pas utiles. Je vais essayer d\u2019expliquer quelques cas de figure standard, et la mani\xe8re dont je les g\xe8re \xe0 travers les quelques exemples qui suivent\u2026"),(0,i.kt)("p",null,"Vous travaillez sur une feature ; tout a \xe9t\xe9 concentr\xe9 dans un seul et unique commit. Par d\xe9faut, le processus git-flow process ajoutera votre commit sur la branche ",(0,i.kt)("inlineCode",{parentName:"p"},"develop")," et ajoutera un commit de merge (vide) \xe9galement. Ce dernier n\u2019est vraiment pas utile, il rend juste l\u2019historique moins lisible. Si le commit de merge n\u2019est pas vide, les choses commencent \xe0 se compliquer ; vous avez probablement loup\xe9 un ",(0,i.kt)("inlineCode",{parentName:"p"},"git flow feature rebase")," quelque part."),(0,i.kt)("p",null,"Conclusion : utilisez ",(0,i.kt)("strong",{parentName:"p"},"rebase"),"."),(0,i.kt)("p",null,"You\u2019ve added a hotfix, again one only commit. git-flow will create merge commits as well. For instance, I\u2019m used to keep those commits, this is a visual trace in the history of what has been done regarding bug fixes."),(0,i.kt)("p",null,"Conclusion : utilisez ",(0,i.kt)("strong",{parentName:"p"},"merge")),(0,i.kt)("p",null,"Vous venez de terminer une feature, tout comme quelqu\u2019un d\u2019autre\u2026 Mais l\u2019autre a d\xe9j\xe0 pouss\xe9 ses modifications sur la branche ",(0,i.kt)("inlineCode",{parentName:"p"},"develop")," distante. Si vous lancez un ",(0,i.kt)("inlineCode",{parentName:"p"},"(develop) $ git push"),", un message vous informera que vous ne pouvez pousser car la branche distante a chang\xe9."),(0,i.kt)("p",null,"I guess many will just run a ",(0,i.kt)("inlineCode",{parentName:"p"},"(develop) $ git pull")," in that case, that will add a merge commit in your history. Those merge commits are really annonying searching in history, whether they\u2019re empty or not. As an alternative, you can run ",(0,i.kt)("inlineCode",{parentName:"p"},"(develop) $ git pull --rebase"),", this will prevent the merge commit."),(0,i.kt)("p",null,"Conclusion : utilisez ",(0,i.kt)("strong",{parentName:"p"},"rebase"),"."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://git-flow.readthedocs.io/fr/latest/_images/history-mreporting.png"},(0,i.kt)("img",{parentName:"a",src:"https://git-flow.readthedocs.io/fr/latest/_images/history-mreporting.png",alt:"https://git-flow.readthedocs.io/fr/latest/_images/history-mreporting.png"}))),(0,i.kt)("p",null,"Un exemple d\u2019historique (depuis le ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pluginsGLPI/mreporting/"},"plugin mreporting"),")."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://git-flow.readthedocs.io/fr/latest/_images/history-galette.png"},(0,i.kt)("img",{parentName:"a",src:"https://git-flow.readthedocs.io/fr/latest/_images/history-galette.png",alt:"https://git-flow.readthedocs.io/fr/latest/_images/history-galette.png"}))),(0,i.kt)("p",null,"Un autre exemple d\u2019historique (depuis le ",(0,i.kt)("a",{parentName:"p",href:"http://galette.eu"},"projet Galette"),")."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://creativecommons.org/licenses/by-nc-nd/4.0/"},(0,i.kt)("img",{parentName:"a",src:"https://git-flow.readthedocs.io/fr/latest/_images/cc-by-nc-nd.png",alt:"Creative Commons License"}))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://zone-4code.github.io/docs-public/"},"Next")," ",(0,i.kt)("a",{parentName:"p",href:"index.html",title:"git-flow (pour plugins GLPI)"},"Previous")),(0,i.kt)("hr",null))}m.isMDXComponent=!0}}]);